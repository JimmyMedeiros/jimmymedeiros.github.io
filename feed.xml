<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-07-18T19:10:23-03:00</updated><id>http://localhost:4000/</id><title type="html">Bule de Pixel</title><subtitle>Existe um bule orbitando o sol em uma trajetória elíptica. Mas ele ainda não foi renderizado.</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2018/07/18/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2018-07-18T01:00:42-03:00</published><updated>2018-07-18T01:00:42-03:00</updated><id>http://localhost:4000/jekyll/update/2018/07/18/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2018/07/18/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">Introdução ao WebGL</title><link href="http://localhost:4000/jekyll/update/2018/07/14/introducao-ao-webgl.html" rel="alternate" type="text/html" title="Introdução ao WebGL" /><published>2018-07-14T15:15:10-03:00</published><updated>2018-07-14T15:15:10-03:00</updated><id>http://localhost:4000/jekyll/update/2018/07/14/introducao-ao-webgl</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2018/07/14/introducao-ao-webgl.html">&lt;h1 id=&quot;o-que-é-webgl&quot;&gt;O que é WebGL&lt;/h1&gt;

&lt;p&gt;WebGL é um port de OpenGL para browsers.&lt;/p&gt;

&lt;h1 id=&quot;como-instalar&quot;&gt;Como instalar&lt;/h1&gt;

&lt;p&gt;…&lt;/p&gt;

&lt;h1 id=&quot;como-usar&quot;&gt;Como usar&lt;/h1&gt;

&lt;p&gt;Vamos ver um exemplo de um programa simples &lt;code class=&quot;highlighter-rouge&quot;&gt;DisplayImage.cpp&lt;/code&gt; abaixo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;opencv2/opencv.hpp&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">WebGL é um port de OpenGL para browsers.</summary></entry><entry><title type="html">Introdução ao OpenGL</title><link href="http://localhost:4000/jekyll/update/2018/07/14/introducao-ao-opengl.html" rel="alternate" type="text/html" title="Introdução ao OpenGL" /><published>2018-07-14T15:15:10-03:00</published><updated>2018-07-14T15:15:10-03:00</updated><id>http://localhost:4000/jekyll/update/2018/07/14/introducao-ao-opengl</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2018/07/14/introducao-ao-opengl.html">&lt;h1 id=&quot;o-que-é-opengl&quot;&gt;O que é OpenGL&lt;/h1&gt;

&lt;p&gt;OpenGL é uma biblioteca escrita em C/C++ para computação gráfica.&lt;/p&gt;

&lt;h1 id=&quot;como-instalar&quot;&gt;Como instalar&lt;/h1&gt;

&lt;p&gt;A documentação do OpenCV recomenda que se utilize o cmake para a instalação.&lt;/p&gt;

&lt;h1 id=&quot;como-usar&quot;&gt;Como usar&lt;/h1&gt;

&lt;p&gt;Vamos ver um exemplo de um programa simples &lt;code class=&quot;highlighter-rouge&quot;&gt;DisplayImage.cpp&lt;/code&gt; abaixo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;opencv2/opencv.hpp&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">OpenGL é uma biblioteca escrita em C/C++ para computação gráfica.</summary></entry><entry><title type="html">Introdução ao OpenCV</title><link href="http://localhost:4000/processamento-de-imagem/c++/python/java/2018/07/14/introducao-ao-opencv.html" rel="alternate" type="text/html" title="Introdução ao OpenCV" /><published>2018-07-14T15:15:10-03:00</published><updated>2018-07-14T15:15:10-03:00</updated><id>http://localhost:4000/processamento-de-imagem/c++/python/java/2018/07/14/introducao-ao-opencv</id><content type="html" xml:base="http://localhost:4000/processamento-de-imagem/c++/python/java/2018/07/14/introducao-ao-opencv.html">&lt;h1 id=&quot;o-que-é-opencv&quot;&gt;O que é OpenCV&lt;/h1&gt;

&lt;p&gt;OpenCV é uma biblioteca escrita em C/C++ focada principalmente em Visão Computacional em tempo real. Ela é Multiplataforma e tem bindings para Java, Python e C++.&lt;/p&gt;

&lt;h1 id=&quot;como-instalar&quot;&gt;Como instalar&lt;/h1&gt;

&lt;p&gt;A documentação do OpenCV recomenda que se utilize o cmake para a instalação. Se você não conhece o cmake e quer saber mais leia este &lt;a href=&quot;colocar aqui o post&quot;&gt;post&lt;/a&gt;.
Você pode baixar o código fonte do OpenCV nesse link * insira aqui o link * para poder compilar e gerar o instalador.
Antes de executar o &lt;code class=&quot;highlighter-rouge&quot;&gt;cmake&lt;/code&gt; é necessário instalar algumas bibliotecas que são dependencias para o OpenCV.
Uma das bibliotecas listada na documentação pode dar problema. Você precisará instalar uma versão anterior. Digite no terminal:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;echo &quot;deb http://us.archive.ubuntu.com/ubuntu/ yakkety universe&quot; | sudo tee -a /etc/apt/sources.list&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;E então:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get update&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get install libjasper-dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Outra opção:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo add-apt-repository &quot;deb http://security.ubuntu.com/ubuntu xenial-security main&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt update&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt install libjasper1 libjasper-dev&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Finalmente descompacte a pasta do opencv e dentro da pasta crie uma pasta &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir build&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd build&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Dentro da pasta &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt; digite o comando:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local ..&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Esse comando irá criar os arquivos necessários para a compilação. Ao terminar compile com:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;make -j7&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;O parâmetro &lt;code class=&quot;highlighter-rouge&quot;&gt;-j7&lt;/code&gt; significa que o processo irá utilizar 7 threads. Isso irá consumir bastante processamento do seu PC, mas a instalação será mais rápido. Se for executar outras tarefas enquanto instala (já que o processo é bem demorado) você pode diminuir o número de threds com &lt;code class=&quot;highlighter-rouge&quot;&gt;make -j5&lt;/code&gt; ou &lt;code class=&quot;highlighter-rouge&quot;&gt;make -j4&lt;/code&gt; por exemplo.
Finalmente, para instalar as bibliotecas digite:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo make install&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;como-usar&quot;&gt;Como usar&lt;/h1&gt;

&lt;p&gt;Vamos ver um exemplo de um programa simples &lt;code class=&quot;highlighter-rouge&quot;&gt;DisplayImage.cpp&lt;/code&gt; abaixo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;opencv2/opencv.hpp&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Josivan Medeiros</name></author><summary type="html">OpenCV é uma biblioteca escrita em C/C++ focada principalmente em Visão Computacional em tempo real. Ela é Multiplataforma e tem bindings para Java, Python e C++.</summary></entry><entry><title type="html">GLFW: uma alternativa para o GLEW</title><link href="http://localhost:4000/c++/c/opengl/2018/07/14/glfw-uma-alternativa-ao-glew.html" rel="alternate" type="text/html" title="GLFW: uma alternativa para o GLEW" /><published>2018-07-14T15:15:10-03:00</published><updated>2018-07-14T15:15:10-03:00</updated><id>http://localhost:4000/c++/c/opengl/2018/07/14/glfw-uma-alternativa-ao-glew</id><content type="html" xml:base="http://localhost:4000/c++/c/opengl/2018/07/14/glfw-uma-alternativa-ao-glew.html">&lt;h1 id=&quot;mas-o-que-diabos-é-glfw-e-glew&quot;&gt;Mas o que diabos é GLFW e GLEW?&lt;/h1&gt;

&lt;p&gt;Se você chegou aqui porque pegou o bonde já andando, recomendo ler o post sobre &lt;a href=&quot;/jekyll/update/2018/07/14/introducao-ao-opengl.html&quot;&gt;OpenGL&lt;/a&gt;. Mas se estiver com preguiça, trocando em miúdos é o seguinte: OpenGL é uma biblioteca para computação gráfica, mas ela não faz comunicação com os periféricos (monitor, input de teclado, etc), no workflow do OpenGL a biblioteca utilizada para gerenciar Input/Output é geralmente a GLEW do próprio Khronos Group, que desenvolve o OpenGL. Acontece que, diferente do OpenGL, o GLEW não é código aberto. Por isso estou escrevendo esse post para dar opções ao GLEW.&lt;/p&gt;

&lt;h1 id=&quot;porque-glfw&quot;&gt;Porque GLFW?&lt;/h1&gt;

&lt;p&gt;GLFW não é a única opção para quem é entusiasta do Open Source. Existe também uma versão Open Source do GLEW.&lt;/p&gt;

&lt;h1 id=&quot;como-usar&quot;&gt;Como usar&lt;/h1&gt;

&lt;p&gt;Documentação do &lt;a href=&quot;http://www.glfw.org/docs/latest/quick.html#quick_steps&quot;&gt;GLFW&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;GLFW/glfw3.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">GLFW é uma biblioteca de c++ para manipular entrada/saída.</summary></entry><entry><title type="html">Como usar o CMake</title><link href="http://localhost:4000/c/c++/2018/07/14/como-usar-o-cmake.html" rel="alternate" type="text/html" title="Como usar o CMake" /><published>2018-07-14T15:15:10-03:00</published><updated>2018-07-14T15:15:10-03:00</updated><id>http://localhost:4000/c/c++/2018/07/14/como-usar-o-cmake</id><content type="html" xml:base="http://localhost:4000/c/c++/2018/07/14/como-usar-o-cmake.html">&lt;h1 id=&quot;um-exemplo-simples-de-cmake&quot;&gt;Um exemplo simples de CMake&lt;/h1&gt;

&lt;p&gt;Com apenas as 3 linhas abaixo podemos gerar um Makefile que…&lt;/p&gt;

&lt;h1 id=&quot;includes&quot;&gt;Includes&lt;/h1&gt;

&lt;p&gt;Para indicar em qual pasta o cmake irá buscar por headers…&lt;/p&gt;

&lt;h1 id=&quot;linkando-bibliotecas&quot;&gt;Linkando bibliotecas&lt;/h1&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">CMake é uma ferramenta que pode acelerar bastante o processo de compilação de um programa em c/c++</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2018/07/14/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2018-07-14T11:07:10-03:00</published><updated>2018-07-14T11:07:10-03:00</updated><id>http://localhost:4000/jekyll/update/2018/07/14/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2018/07/14/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>